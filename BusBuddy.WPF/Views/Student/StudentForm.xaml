<!--
    StudentForm.xaml — BusBuddy Student Entry/Edit Dialog
    Uses Syncfusion ChromelessWindow for modern, chromeless UI.
    All controls styled and sized for accessibility and data type clarity.
    Theming is applied via SfSkinManager in code-behind (FluentDark default, FluentLight fallback).
    ResourceDictionary merges project-wide Syncfusion styles and converters.
    See code-behind for theme logic and event handling.
    https://help.syncfusion.com/wpf/chromelesswindow/overview
-->
<!-- Converted from ChromelessWindow to UserControl for standardized hosting inside DockingManager/dialog host. -->
<UserControl x:Class="BusBuddy.WPF.Views.Student.StudentForm"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:syncfusionshared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.Wpf"
             xmlns:validation="clr-namespace:BusBuddy.WPF.Validation"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             FontSize="14">

    <!--
        Resource section: Styles, converters, and merged dictionaries for consistent Syncfusion look and feel.
        Styles ensure all input controls are sized and padded for usability.
    -->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/BusBuddy.WPF;component/Resources/SyncfusionV30_Validated_ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!-- Validation: Error template and invalid visual states -->
            <ControlTemplate x:Key="ValidationErrorTemplate">
                <DockPanel LastChildFill="True">
                    <TextBlock Foreground="{StaticResource BusBuddy.Brush.Semantic.Error}"
                               Margin="0,0,0,4"
                               DockPanel.Dock="Bottom"
                               Text="{Binding [0].ErrorContent}"/>
                    <Border BorderBrush="{StaticResource BusBuddy.Brush.Semantic.Error}"
                            BorderThickness="2"
                            CornerRadius="3">
                        <AdornedElementPlaceholder/>
                    </Border>
                </DockPanel>
            </ControlTemplate>

            <!-- Show red border when has validation error (WPF validation pattern) -->
            <Style x:Key="ValidatedTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource BusBuddy.Brush.Semantic.Error}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ValidatedSfTextBoxStyle" TargetType="syncfusion:SfTextBoxExt" BasedOn="{StaticResource {x:Type syncfusion:SfTextBoxExt}}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource BusBuddy.Brush.Semantic.Error}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ValidatedComboBoxAdvStyle" TargetType="syncfusion:ComboBoxAdv" BasedOn="{StaticResource {x:Type syncfusion:ComboBoxAdv}}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource BusBuddy.Brush.Semantic.Error}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                    <!-- Default to first item when no selection and items exist -->
                    <Trigger Property="SelectedItem" Value="{x:Null}">
                        <Setter Property="SelectedIndex" Value="0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ValidatedMaskedEditStyle" TargetType="syncfusion:SfMaskedEdit" BasedOn="{StaticResource {x:Type syncfusion:SfMaskedEdit}}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource BusBuddy.Brush.Semantic.Error}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!-- United States state abbreviations -->
            <x:Array x:Key="USStates" Type="sys:String">
                <sys:String>AL</sys:String><sys:String>AK</sys:String><sys:String>AZ</sys:String><sys:String>AR</sys:String>
                <sys:String>CA</sys:String><sys:String>CO</sys:String><sys:String>CT</sys:String><sys:String>DE</sys:String>
                <sys:String>FL</sys:String><sys:String>GA</sys:String><sys:String>HI</sys:String><sys:String>ID</sys:String>
                <sys:String>IL</sys:String><sys:String>IN</sys:String><sys:String>IA</sys:String><sys:String>KS</sys:String>
                <sys:String>KY</sys:String><sys:String>LA</sys:String><sys:String>ME</sys:String><sys:String>MD</sys:String>
                <sys:String>MA</sys:String><sys:String>MI</sys:String><sys:String>MN</sys:String><sys:String>MS</sys:String>
                <sys:String>MO</sys:String><sys:String>MT</sys:String><sys:String>NE</sys:String><sys:String>NV</sys:String>
                <sys:String>NH</sys:String><sys:String>NJ</sys:String><sys:String>NM</sys:String><sys:String>NY</sys:String>
                <sys:String>NC</sys:String><sys:String>ND</sys:String><sys:String>OH</sys:String><sys:String>OK</sys:String>
                <sys:String>OR</sys:String><sys:String>PA</sys:String><sys:String>RI</sys:String><sys:String>SC</sys:String>
                <sys:String>SD</sys:String><sys:String>TN</sys:String><sys:String>TX</sys:String><sys:String>UT</sys:String>
                <sys:String>VT</sys:String><sys:String>VA</sys:String><sys:String>WA</sys:String><sys:String>WV</sys:String>
                <sys:String>WI</sys:String><sys:String>WY</sys:String><sys:String>DC</sys:String>
            </x:Array>
            <!-- Simple string list for Grades -->
            <x:Array x:Key="GradesList" Type="sys:String">
                <sys:String>K</sys:String>
                <sys:String>1</sys:String>
                <sys:String>2</sys:String>
                <sys:String>3</sys:String>
                <sys:String>4</sys:String>
                <sys:String>5</sys:String>
                <sys:String>6</sys:String>
                <sys:String>7</sys:String>
                <sys:String>8</sys:String>
                <sys:String>9</sys:String>
                <sys:String>10</sys:String>
                <sys:String>11</sys:String>
                <sys:String>12</sys:String>
            </x:Array>
            <!-- Required converter for Visibility bindings -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <!-- Ensure consistent sizing for Syncfusion inputs -->
            <Style TargetType="syncfusion:SfMaskedEdit" BasedOn="{StaticResource {x:Type syncfusion:SfMaskedEdit}}">
                <Setter Property="Height" Value="40"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
                <Setter Property="Background" Value="{StaticResource BusBuddy.Brush.Surface.Light}"/>
            </Style>
            <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
                <Setter Property="Height" Value="40"/>
                <Setter Property="Padding" Value="8,0"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
                <Setter Property="Background" Value="{StaticResource BusBuddy.Brush.Surface.Light}"/>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
                <Setter Property="Background" Value="{StaticResource BusBuddy.Brush.Surface.Light}"/>
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
                <Setter Property="Background" Value="{StaticResource BusBuddy.Brush.Surface.Light}"/>
            </Style>
            <!-- High-contrast styles for Syncfusion inputs used on this form -->
            <Style TargetType="syncfusion:ComboBoxAdv" BasedOn="{StaticResource {x:Type syncfusion:ComboBoxAdv}}">
                <Setter Property="Height" Value="40"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
                <Setter Property="Background" Value="{StaticResource BusBuddy.Brush.Surface.Light}"/>
            </Style>
            <Style TargetType="syncfusion:SfDatePicker" BasedOn="{StaticResource {x:Type syncfusion:SfDatePicker}}">
                <Setter Property="Height" Value="40"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
                <Setter Property="Background" Value="{StaticResource BusBuddy.Brush.Surface.Light}"/>
            </Style>
            <Style TargetType="syncfusion:SfTextBoxExt" BasedOn="{StaticResource {x:Type syncfusion:SfTextBoxExt}}">
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
                <Setter Property="Background" Value="{StaticResource BusBuddy.Brush.Surface.Light}"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
            </Style>
            <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Foreground" Value="{StaticResource BusBuddy.Brush.Text.Primary}"/>
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="15,8"/>
                <Setter Property="MinWidth" Value="100"/>
                <Setter Property="Height" Value="40"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--
        Main content: ScrollViewer for vertical scrolling, Grid for layout.
        All form sections use Syncfusion controls (SfMaskedEdit, ComboBoxAdv, ButtonAdv, etc.).
        GroupBoxes organize logical sections: Basic Info, Address, Contact, Transportation, Special Needs.
        Action bar at bottom provides Save/Cancel/Validate with validation status.
    -->
    <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="20">
        <Grid MaxWidth="600">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Global Error Panel -->
            <Border Grid.Row="0" Background="{StaticResource BusBuddy.Brush.Semantic.Error}" CornerRadius="5" Padding="15" Margin="0,0,0,10"
                    Visibility="{Binding HasGlobalError, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="⚠️" FontSize="16" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                              VerticalAlignment="Center" Margin="0,0,10,0"/>
                    <TextBlock Grid.Column="1" Text="{Binding GlobalErrorMessage}"
                              Foreground="{StaticResource BusBuddy.Brush.Text.Primary}" FontWeight="Bold" TextWrapping="Wrap"
                              VerticalAlignment="Center"/>
                    <syncfusion:ButtonAdv Grid.Column="2" Label="✖"
                                         Command="{Binding ClearGlobalErrorCommand}"
                                         Background="Transparent" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                                         BorderThickness="1" BorderBrush="{StaticResource BusBuddy.Brush.Text.Primary}"
                                         Width="30" Height="30"
                                             ToolTip="Clear error message"
                                             AutomationProperties.Name="Clear Error"/>
                </Grid>
            </Border>

            <!-- Header -->
            <Border Grid.Row="1" Background="{StaticResource BusBuddy.Brush.Primary}"
                    CornerRadius="5" Padding="15" Margin="0,0,0,20">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="&#xE716;" FontFamily="Segoe MDL2 Assets"
                              FontSize="24" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                    <TextBlock Text="{Binding FormTitle}" FontSize="18" FontWeight="Bold"
                              Foreground="{StaticResource BusBuddy.Brush.Text.Primary}" VerticalAlignment="Center"/>
                </StackPanel>
            </Border>

            <!-- Form Content -->
            <StackPanel Grid.Row="2">
                <!-- Basic Information -->
                <GroupBox Header="Basic Information" Margin="0,0,0,15" Padding="15">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                            <Label Content="Student Name *"/>
                            <!-- Plain text input — prefer SfTextBoxExt. Docs: https://help.syncfusion.com/wpf/autocomplete/getting-started -->
                            <syncfusion:SfTextBoxExt Name="StudentNameTextBox" Style="{StaticResource ValidatedSfTextBoxStyle}"
                                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                     Watermark="First Name, Last Name"
                                     AutomationProperties.Name="Student Name">
                                <syncfusion:SfTextBoxExt.Text>
                                    <Binding Path="Student.StudentName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                        <Binding.ValidationRules>
                                            <validation:StringNotEmptyValidationRule FieldName="Student Name"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </syncfusion:SfTextBoxExt.Text>
                            </syncfusion:SfTextBoxExt>
                        </StackPanel>

                        <StackPanel Grid.Row="0" Grid.Column="1" Margin="10,0,0,0">
                            <Label Content="Student Number"/>
                            <!-- Plain text/identifier — use SfTextBoxExt unless a specific mask is required -->
                            <syncfusion:SfTextBoxExt Name="StudentNumberTextBox"
                                     Text="{Binding Student.StudentNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Watermark="Auto-generated if empty"
                                     AutomationProperties.Name="Student Number"/>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,0,10,0">
                            <Label Content="Grade *"/>
                            <syncfusion:ComboBoxAdv Name="GradeComboBox" Style="{StaticResource ValidatedComboBoxAdvStyle}"
                                      Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                      IsEditable="False"
                                      Width="100"
                                      AutomationProperties.Name="Grade">
                                <syncfusion:ComboBoxAdv.ItemsSource>
                                    <PriorityBinding>
                                        <Binding Path="AvailableGrades"/>
                                        <Binding Source="{StaticResource GradesList}"/>
                                    </PriorityBinding>
                                </syncfusion:ComboBoxAdv.ItemsSource>
                                <syncfusion:ComboBoxAdv.SelectedItem>
                                    <Binding Path="Student.Grade" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validation:StringNotEmptyValidationRule FieldName="Grade"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </syncfusion:ComboBoxAdv.SelectedItem>
                            </syncfusion:ComboBoxAdv>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="1" Margin="10,0,0,0">
                            <Label Content="School"/>
                            <syncfusion:SfTextBoxExt Name="SchoolTextBox"
                                     Text="{Binding Student.School, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Watermark="Optional"
                                     AutomationProperties.Name="School"/>
                        </StackPanel>

                        <StackPanel Grid.Row="2" Grid.Column="0" Margin="0,0,10,0">
                            <Label Content="Date of Birth"/>
                            <syncfusion:SfDatePicker Name="DateOfBirthPicker"
                                       Value="{Binding Student.DateOfBirth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       AllowNull="True"
                                       Watermark="Select birthdate (optional)"
                                       Height="35"
                                       AutomationProperties.Name="Date of Birth"/>
                        </StackPanel>

                        <StackPanel Grid.Row="2" Grid.Column="1" Margin="10,0,0,0">
                            <!-- Empty for now - can add more fields later -->
                        </StackPanel>

                        <StackPanel Grid.Row="3" Grid.ColumnSpan="2">
                            <CheckBox Name="ActiveCheckBox"
                                      Content="Active Student"
                                      IsChecked="{Binding Student.Active, Mode=TwoWay}"
                                      Margin="0,10,0,0"
                                      AutomationProperties.Name="Active Student"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Address Information -->
                <GroupBox Header="Address Information" Margin="0,0,0,15" Padding="15">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Grid.ColumnSpan="3">
                            <Label Content="Home Address *"/>
                            <!-- Free-form address — use SfTextBoxExt -->
                            <syncfusion:SfTextBoxExt Name="HomeAddressTextBox" Style="{StaticResource ValidatedSfTextBoxStyle}"
                                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                     Watermark="123 Main Street"
                                     AutomationProperties.Name="Home Address">
                                <syncfusion:SfTextBoxExt.Text>
                                    <Binding Path="Student.HomeAddress" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                        <Binding.ValidationRules>
                                            <validation:StringNotEmptyValidationRule FieldName="Home Address"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </syncfusion:SfTextBoxExt.Text>
                            </syncfusion:SfTextBoxExt>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,0,10,0">
                            <Label Content="City *"/>
                            <syncfusion:SfTextBoxExt Name="CityTextBox" Style="{StaticResource ValidatedSfTextBoxStyle}"
                                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                     Watermark="City name"
                                     AutomationProperties.Name="City">
                                <syncfusion:SfTextBoxExt.Text>
                                    <Binding Path="Student.City" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                        <Binding.ValidationRules>
                                            <validation:StringNotEmptyValidationRule FieldName="City"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </syncfusion:SfTextBoxExt.Text>
                            </syncfusion:SfTextBoxExt>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="1" Margin="10,0,10,0">
                            <Label Content="State *"/>
                            <!-- Use ComboBoxAdv bound to a canonical list of US states to avoid free text -->
                            <syncfusion:ComboBoxAdv Name="StateComboBox" Style="{StaticResource ValidatedComboBoxAdvStyle}"
                                      Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                      IsEditable="False" Width="100"
                                      AutomationProperties.Name="State">
                                <syncfusion:ComboBoxAdv.ItemsSource>
                                    <PriorityBinding>
                                        <Binding Path="AvailableStates"/>
                                        <Binding Source="{StaticResource USStates}"/>
                                    </PriorityBinding>
                                </syncfusion:ComboBoxAdv.ItemsSource>
                                <syncfusion:ComboBoxAdv.SelectedItem>
                                    <Binding Path="Student.State" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validation:StringNotEmptyValidationRule FieldName="State"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </syncfusion:ComboBoxAdv.SelectedItem>
                            </syncfusion:ComboBoxAdv>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="2" Margin="10,0,0,0">
                            <Label Content="ZIP Code *"/>
                            <!-- Use SfMaskedEdit with regex to enforce 5 or 5+4 ZIP formats -->
                            <syncfusion:SfMaskedEdit Name="ZipMaskedEdit" Style="{StaticResource ValidatedMaskedEditStyle}"
                                       Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                                       MaskType="RegEx"
                                       Mask="\d{5}(-\d{4})?"
                                       PromptChar="_"
                                       Width="110"
                                       Watermark="12345 or 12345-6789"
                                       AutomationProperties.Name="ZIP Code">
                                <syncfusion:SfMaskedEdit.Value>
                                    <Binding Path="Student.Zip" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validation:StringNotEmptyValidationRule FieldName="ZIP Code"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </syncfusion:SfMaskedEdit.Value>
                            </syncfusion:SfMaskedEdit>
                        </StackPanel>

                        <StackPanel Grid.Row="2" Grid.ColumnSpan="3">
                <syncfusion:ButtonAdv Name="ValidateAddressButton"
                    Label="Validate Address"
                                    Command="{Binding ValidateAddressCommand}"
                                    HorizontalAlignment="Left"
                                    Margin="0,10,0,0"
                                    AutomationProperties.Name="Validate Address"/>
                            <TextBlock Name="AddressValidationMessage"
                                       Text="{Binding AddressValidationMessage}"
                                       Foreground="{Binding AddressValidationColor}"
                                       Margin="0,5,0,0"
                                       TextWrapping="Wrap"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Contact Information -->
                <GroupBox Header="Contact Information" Margin="0,0,0,15" Padding="15">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                            <Label Content="Home Phone"/>
                            <!-- Use SfMaskedEdit for US phone number pattern -->
                            <syncfusion:SfMaskedEdit Name="HomePhoneMaskedEdit"
                                       Value="{Binding Student.HomePhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Mask="(###) ###-####"
                                       PromptChar="_"
                                       Watermark="(555) 123-4567 — Optional"
                                       AutomationProperties.Name="Home Phone"/>
                        </StackPanel>

                        <StackPanel Grid.Row="0" Grid.Column="1" Margin="10,0,0,0">
                            <Label Content="Emergency Phone"/>
                            <syncfusion:SfMaskedEdit Name="EmergencyPhoneMaskedEdit"
                                       Value="{Binding Student.EmergencyPhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       Mask="(###) ###-####"
                                       PromptChar="_"
                                       Watermark="(555) 123-4567 — Optional"
                                       AutomationProperties.Name="Emergency Phone"/>
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.ColumnSpan="2">
                            <Label Content="Parent/Guardian"/>
                            <syncfusion:SfTextBoxExt Name="ParentGuardianTextBox"
                                     Text="{Binding Student.ParentGuardian, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Watermark="Optional"
                                     AutomationProperties.Name="Parent or Guardian"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Transportation Information -->
                <GroupBox Header="Transportation Information" Margin="0,0,0,15" Padding="15">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Route Assignment -->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Margin="0,0,10,0">
                                <Label Content="AM Route"/>
                                <syncfusion:ComboBoxAdv Name="AMRouteComboBox"
                                          ItemsSource="{Binding AvailableRoutes}"
                                          DisplayMemberPath="RouteName"
                                          SelectedValuePath="RouteName"
                                          SelectedValue="{Binding Student.AMRoute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          IsEditable="True"
                                          AutomationProperties.Name="AM Route"/>
                            </StackPanel>

                            <StackPanel Grid.Column="1" Margin="10,0,10,0">
                                <Label Content="PM Route"/>
                                <syncfusion:ComboBoxAdv Name="PMRouteComboBox"
                                          ItemsSource="{Binding AvailableRoutes}"
                                          DisplayMemberPath="RouteName"
                                          SelectedValuePath="RouteName"
                                          SelectedValue="{Binding Student.PMRoute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          IsEditable="True"
                                          AutomationProperties.Name="PM Route"/>
                            </StackPanel>

                            <StackPanel Grid.Column="2" Margin="10,0,0,0">
                                <Label Content="Bus Stop"/>
                                <syncfusion:ComboBoxAdv Name="BusStopComboBox"
                                          Text="{Binding Student.BusStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          ItemsSource="{Binding FilteredBusStops}"
                                          IsEditable="True"
                                          AutomationProperties.Name="Bus Stop"/>
                            </StackPanel>
                        </Grid>

                        <!-- AI and Mapping Actions -->
                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,15,0,0">
                <syncfusion:ButtonAdv Name="SuggestRoutesButton"
                    Label="🤖 AI Suggest Routes"
                                    Command="{Binding SuggestRoutesCommand}"
                                    Background="{StaticResource BusBuddy.Brush.SafetyOrange}" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                                    ToolTip="Use xAI Grok to suggest optimal routes based on address"
                                    AutomationProperties.Name="AI Suggest Routes"/>
                <syncfusion:ButtonAdv Name="ViewOnMapButton"
                    Label="🗺️ View on Map"
                                    Command="{Binding ViewOnMapCommand}"
                                    Background="{StaticResource BusBuddy.Brush.Semantic.Info}" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                                    Margin="10,0,0,0"
                                    ToolTip="Show student location on Google Earth Engine map"
                                    AutomationProperties.Name="View on Map"/>
                <syncfusion:ButtonAdv Name="ImportCsvButton"
                    Label="📥 Import CSV"
                                    Command="{Binding ImportCsvCommand}"
                                    Background="{StaticResource BusBuddy.Brush.FleetGreen}" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                                    Margin="10,0,0,0"
                                    ToolTip="Import student data from CSV file"
                                    AutomationProperties.Name="Import CSV"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Special Needs and Safety -->
                <GroupBox Header="Special Needs and Safety Requirements" Margin="0,0,0,15" Padding="15">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Special Needs Flags -->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <CheckBox Grid.Column="0" Name="RequiresWheelchairCheckBox"
                                    Content="Wheelchair Accessible"
                                    IsChecked="{Binding Student.RequiresWheelchair, Mode=TwoWay}"
                                    VerticalAlignment="Center"/>
                            <CheckBox Grid.Column="1" Name="RequiresSeatBeltCheckBox"
                                    Content="Seat Belt Required"
                                    IsChecked="{Binding Student.RequiresSeatBelt, Mode=TwoWay}"
                                    VerticalAlignment="Center"/>
                            <CheckBox Grid.Column="2" Name="RequiresAideCheckBox"
                                    Content="Aide Required"
                                    IsChecked="{Binding Student.RequiresAide, Mode=TwoWay}"
                                    VerticalAlignment="Center"/>
                            <CheckBox Grid.Column="3" Name="HasMedicalNeedsCheckBox"
                                    Content="Medical Needs"
                                    IsChecked="{Binding Student.HasMedicalNeeds, Mode=TwoWay}"
                                    VerticalAlignment="Center"/>
                        </Grid>

                        <!-- Special Instructions -->
                        <StackPanel Grid.Row="1" Margin="0,10,0,0">
                            <Label Content="Special Instructions"/>
                            <syncfusion:SfTextBoxExt Name="SpecialInstructionsTextBox"
                                       Text="{Binding Student.SpecialInstructions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       AcceptsReturn="True"
                                       TextWrapping="Wrap"
                                       Height="60"
                                       VerticalScrollBarVisibility="Auto"
                                       Watermark="Enter any special transportation instructions... — Optional"/>
                        </StackPanel>

                        <!-- Emergency Contact -->
                        <Grid Grid.Row="2" Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Margin="0,0,10,0">
                                <Label Content="Emergency Contact Name"/>
                                <syncfusion:SfTextBoxExt Name="EmergencyContactNameTextBox"
                                           Text="{Binding Student.EmergencyContactName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           Watermark="Emergency contact full name — Optional"/>
                            </StackPanel>

                            <StackPanel Grid.Column="1" Margin="10,0,0,0">
                                <Label Content="Emergency Contact Phone"/>
                                <syncfusion:SfMaskedEdit Name="EmergencyContactPhoneMaskedEdit"
                                           Value="{Binding Student.EmergencyContactPhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           Mask="(###) ###-####"
                                           PromptChar="_"
                                           Watermark="(555) 123-4567 — Optional"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </GroupBox>
            </StackPanel>

            <!-- Form Actions with Validation Status -->
            <Border Grid.Row="3" Background="{StaticResource BusBuddy.Brush.Surface.Light}"
                    CornerRadius="3" Padding="15" Margin="0,20,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Validation Status -->
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                        <syncfusion:SfBusyIndicator Name="ValidationBusyIndicator"
                                      AnimationType="DualRing"
                                      Visibility="{Binding IsValidating, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Width="20" Height="20"
                                      Margin="0,0,10,0"/>
                        <TextBlock Name="ValidationStatusTextBlock"
                                 Text="{Binding ValidationStatus}"
                                 Foreground="{Binding ValidationStatusBrush}"
                                 VerticalAlignment="Center"
                                 FontWeight="Bold"/>
                    </StackPanel>

                    <!-- Detailed Validation Errors -->
                    <Border Grid.Row="1" Background="{StaticResource BusBuddy.Brush.Surface.Dark}"
                            CornerRadius="3" Padding="10" Margin="0,0,0,10"
                            Visibility="{Binding HasValidationErrors, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel>
                            <TextBlock Text="Please fix the following:"
                                       FontWeight="SemiBold"
                                       Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                                       Margin="0,0,0,8"/>
                            <ItemsControl ItemsSource="{Binding ValidationErrors}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}"
                                                   Foreground="{StaticResource BusBuddy.Brush.Semantic.Error}"
                                                   Margin="0,2,0,0"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Border>

                    <!-- Action Buttons -->
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <syncfusion:ButtonAdv Name="ValidateButton"
        Label="🔍 Validate Data"
                Command="{Binding ValidateDataCommand}"
                Background="{StaticResource BusBuddy.Brush.Semantic.Warning}" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                Margin="0,0,10,0"
                ToolTip="Validate all student data and address"
                AutomationProperties.Name="Validate Data"/>
            <syncfusion:ButtonAdv Name="SaveButton" Label="💾 Save Student"
                Command="{Binding SaveCommand}"
                IsEnabled="{Binding CanSave}"
                                Background="{StaticResource BusBuddy.Brush.Primary}" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                                Margin="0,0,10,0"
                                IsDefault="True"
                                ToolTip="Save student information to database"
                                AutomationProperties.Name="Save Student"/>
            <syncfusion:ButtonAdv Name="CancelButton" Label="❌ Cancel"
                Command="{Binding CancelCommand}"
                Background="{StaticResource BusBuddy.Brush.Semantic.Error}" Foreground="{StaticResource BusBuddy.Brush.Text.Primary}"
                IsCancel="True"
                ToolTip="Cancel and return to students list"
                AutomationProperties.Name="Cancel"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </ScrollViewer>
</UserControl>
