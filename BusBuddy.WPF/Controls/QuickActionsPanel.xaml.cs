using System.Windows;
using System.Windows.Controls;
using Serilog;

namespace BusBuddy.WPF.Controls
{
    /// <summary>
    /// Interaction logic for QuickActionsPanel.xaml
    /// </summary>
    public partial class QuickActionsPanel : UserControl
    {
        private static readonly ILogger Logger = Log.ForContext<QuickActionsPanel>();

        public QuickActionsPanel()
        {
            // InitializeComponent will be auto-generated by XAML compiler
        }

        private void AddVehicle_Click(object sender, RoutedEventArgs e)
        {
            Logger.Information("Add vehicle action requested");
            try
            {
                var form = new BusBuddy.WPF.Views.Bus.BusForm();
                bool? dialogResult = null;
                var host = new Window
                {
                    Title = "Add Bus",
                    Content = form,
                    Owner = Application.Current?.Windows.OfType<Window>().FirstOrDefault(w => w.IsActive),
                    WindowStartupLocation = WindowStartupLocation.CenterOwner,
                    SizeToContent = SizeToContent.WidthAndHeight
                };
                form.RequestCloseByHost += (s, _) => { var f = (BusBuddy.WPF.Views.Bus.BusForm)s!; dialogResult = f.DialogResult; host.DialogResult = f.DialogResult; host.Close(); };
                host.ShowDialog();
                if (dialogResult == true)
                {
                    MessageBox.Show("Vehicle added successfully!", "Success", MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }
            catch (Exception ex)
            {
                Logger.Error(ex, "Error opening Bus form");
                MessageBox.Show($"Error opening Bus form: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void AddDriver_Click(object sender, RoutedEventArgs e)
        {
            Logger.Information("Add driver action requested");
            try
            {
                var form = new BusBuddy.WPF.Views.Driver.DriverForm();
                bool? dialogResult = null;
                var host = new Window
                {
                    Title = "Add Driver",
                    Content = form,
                    Owner = Application.Current?.Windows.OfType<Window>().FirstOrDefault(w => w.IsActive),
                    WindowStartupLocation = WindowStartupLocation.CenterOwner,
                    SizeToContent = SizeToContent.WidthAndHeight
                };
                form.RequestCloseByHost += (s, _) => { var f = (BusBuddy.WPF.Views.Driver.DriverForm)s!; dialogResult = f.DialogResult; host.DialogResult = f.DialogResult; host.Close(); };
                host.ShowDialog();
                if (dialogResult == true)
                {
                    MessageBox.Show("Driver added successfully!", "Success", MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }
            catch (Exception ex)
            {
                Logger.Error(ex, "Error opening Driver form");
                MessageBox.Show($"Error opening Driver form: {ex.Message}", "Error",
                    MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void ScheduleRoute_Click(object sender, RoutedEventArgs e)
        {
            Logger.Information("Schedule route action requested");
            MessageBox.Show("Route management feature available from the main menu (Routes tab).",
                "Route Management", MessageBoxButton.OK, MessageBoxImage.Information);
        }
    }
}
