#Requires -Version 7.5

<#
.SYNOPSIS
    BusBuddy Git Workflow Profile Setup - User Level (No Admin Required)
.DESCRIPTION
    Sets up BusBuddy Git workflow functions in the current session and adds them to the BusBuddy profile.
    This avoids the need for administrator privileges while providing the Git workflow integration.
.NOTES
    File Name      : Setup-BusBuddyGitWorkflow.ps1
    Prerequisite   : PowerShell 7.5+, Git installed
    Author         : BusBuddy Development Team
    Version        : 1.0.0
    Reference      : https://learn.microsoft.com/en-us/powershell/scripting/developer/module/writing-a-windows-powershell-module
.LINK
    https://github.com/Bigessfour/BusBuddy-3
#>

param(
    [switch]$UpdateProfile,
    [switch]$TestFunctions
)

Write-Information "üöÄ Setting up BusBuddy Git Workflow (User Level)" -InformationAction Continue

# Import the Git workflow module
$modulePath = Join-Path $PSScriptRoot "..\Modules\BusBuddy-GitWorkflow.psm1"
if (Test-Path $modulePath) {
    Write-Information "üì¶ Importing BusBuddy-GitWorkflow module..." -InformationAction Continue
    Import-Module $modulePath -Force -Verbose:$false
    Write-Information "‚úÖ Module imported successfully" -InformationAction Continue
} else {
    Write-Error "‚ùå Git workflow module not found at: $modulePath"
    exit 1
}

# Create convenient aliases following Microsoft PowerShell standards
Write-Information "üîó Creating bb- aliases..." -InformationAction Continue

# Git workflow aliases
Set-Alias -Name bb-fetch-update -Value Update-BusBuddyFetchabilityIndex -Scope Global
Set-Alias -Name bb-commit -Value Invoke-BusBuddyCommit -Scope Global
Set-Alias -Name bb-push -Value Invoke-BusBuddyPush -Scope Global
Set-Alias -Name bb-git -Value Invoke-BusBuddyCommitAndPush -Scope Global

# Additional convenience aliases
Set-Alias -Name bb-sync -Value Invoke-BusBuddyCommitAndPush -Scope Global
Set-Alias -Name bb-save -Value Invoke-BusBuddyCommit -Scope Global

Write-Information "‚úÖ Aliases created:" -InformationAction Continue
Write-Information "   bb-fetch-update  -> Update fetchability index" -InformationAction Continue
Write-Information "   bb-commit        -> Commit with fetchability update" -InformationAction Continue
Write-Information "   bb-push          -> Push with validation" -InformationAction Continue
Write-Information "   bb-git           -> Full commit and push workflow" -InformationAction Continue
Write-Information "   bb-sync          -> Same as bb-git" -InformationAction Continue
Write-Information "   bb-save          -> Same as bb-commit" -InformationAction Continue

# Test functions if requested
if ($TestFunctions) {
    Write-Information "üß™ Testing Git workflow functions..." -InformationAction Continue
    
    try {
        # Test fetchability update (dry run)
        Write-Information "Testing fetchability index update..." -InformationAction Continue
        $testResult = Update-BusBuddyFetchabilityIndex -Validate
        
        if ($testResult.Success) {
            Write-Information "‚úÖ Fetchability index test passed" -InformationAction Continue
            Write-Information "   Size: $($testResult.SizeKB) KB" -InformationAction Continue
            Write-Information "   Last Modified: $($testResult.LastModified)" -InformationAction Continue
        } else {
            Write-Warning "‚ö†Ô∏è Fetchability index test failed: $($testResult.Error)"
        }
        
        # Test Git status
        Write-Information "Testing Git repository status..." -InformationAction Continue
        $gitStatus = git status --porcelain
        
        if ($LASTEXITCODE -eq 0) {
            Write-Information "‚úÖ Git repository test passed" -InformationAction Continue
            $changeCount = ($gitStatus | Measure-Object).Count
            Write-Information "   Changes detected: $changeCount files" -InformationAction Continue
        } else {
            Write-Warning "‚ö†Ô∏è Git repository test failed - not in a Git repository or Git not available"
        }
        
    } catch {
        Write-Warning "‚ö†Ô∏è Function test encountered error: $($_.Exception.Message)"
    }
}

# Update BusBuddy profile if requested
if ($UpdateProfile) {
    Write-Information "üìù Updating BusBuddy PowerShell profile..." -InformationAction Continue
    
    $profilePath = Join-Path $PSScriptRoot "..\Profiles\Microsoft.PowerShell_profile.ps1"
    
    # Profile content with Git workflow integration
    $profileContent = @'
#Requires -Version 7.5

# BusBuddy PowerShell Profile with Git Workflow Integration
# Auto-generated by Setup-BusBuddyGitWorkflow.ps1

Write-Information "üöå Loading BusBuddy PowerShell Profile..." -InformationAction Continue

# Import BusBuddy Git Workflow module
$gitWorkflowModule = Join-Path $PSScriptRoot "..\Modules\BusBuddy-GitWorkflow.psm1"
if (Test-Path $gitWorkflowModule) {
    Import-Module $gitWorkflowModule -Force -Verbose:$false
    
    # Create Git workflow aliases
    Set-Alias -Name bb-fetch-update -Value Update-BusBuddyFetchabilityIndex -Scope Global
    Set-Alias -Name bb-commit -Value Invoke-BusBuddyCommit -Scope Global
    Set-Alias -Name bb-push -Value Invoke-BusBuddyPush -Scope Global
    Set-Alias -Name bb-git -Value Invoke-BusBuddyCommitAndPush -Scope Global
    Set-Alias -Name bb-sync -Value Invoke-BusBuddyCommitAndPush -Scope Global
    Set-Alias -Name bb-save -Value Invoke-BusBuddyCommit -Scope Global
    
    Write-Information "‚úÖ Git workflow functions loaded" -InformationAction Continue
} else {
    Write-Warning "‚ö†Ô∏è Git workflow module not found at: $gitWorkflowModule"
}

# Import other BusBuddy modules
$modulesPath = Join-Path $PSScriptRoot "..\Modules"
if (Test-Path $modulesPath) {
    Get-ChildItem -Path $modulesPath -Filter "*.psm1" | ForEach-Object {
        if ($_.Name -ne "BusBuddy-GitWorkflow.psm1") {
            try {
                Import-Module $_.FullName -Force -Verbose:$false -ErrorAction SilentlyContinue
            } catch {
                Write-Verbose "Could not load module: $($_.Name)"
            }
        }
    }
}

# BusBuddy environment variables
$env:BUSBUDDY_PROFILE_LOADED = "1"
$env:BUSBUDDY_GIT_WORKFLOW = "1"

# Common Git workflow functions
function bb-status {
    <#
    .SYNOPSIS
        Shows Git status with fetchability index information.
    #>
    [CmdletBinding()]
    param()
    
    Write-Information "üìä BusBuddy Repository Status" -InformationAction Continue
    Write-Information "================================" -InformationAction Continue
    
    # Git status
    git status --short
    
    # Fetchability index status
    $fetchabilityPath = Join-Path (Get-Location) "FETCHABILITY-INDEX.json"
    if (Test-Path $fetchabilityPath) {
        $indexInfo = Get-Item $fetchabilityPath
        $ageMinutes = [math]::Round(((Get-Date) - $indexInfo.LastWriteTime).TotalMinutes, 1)
        Write-Information "üìã Fetchability Index: $([math]::Round($indexInfo.Length / 1KB, 1)) KB, $ageMinutes min old" -InformationAction Continue
    } else {
        Write-Information "üìã Fetchability Index: Not found" -InformationAction Continue
    }
}

function bb-help {
    <#
    .SYNOPSIS
        Shows BusBuddy Git workflow help.
    #>
    [CmdletBinding()]
    param()
    
    Write-Information "üöå BusBuddy Git Workflow Commands" -InformationAction Continue
    Write-Information "===================================" -InformationAction Continue
    Write-Information "" -InformationAction Continue
    Write-Information "üìã Repository Status:" -InformationAction Continue
    Write-Information "   bb-status           Show Git and fetchability status" -InformationAction Continue
    Write-Information "   bb-fetch-update     Update fetchability index for Grok-4" -InformationAction Continue
    Write-Information "" -InformationAction Continue
    Write-Information "üíæ Commit Operations:" -InformationAction Continue
    Write-Information "   bb-commit 'message' Commit with fetchability update" -InformationAction Continue
    Write-Information "   bb-save 'message'   Same as bb-commit" -InformationAction Continue
    Write-Information "" -InformationAction Continue
    Write-Information "üöÄ Push Operations:" -InformationAction Continue
    Write-Information "   bb-push             Push with pre-push validation" -InformationAction Continue
    Write-Information "" -InformationAction Continue
    Write-Information "üîÑ Complete Workflow:" -InformationAction Continue
    Write-Information "   bb-git 'message'    Full commit and push workflow" -InformationAction Continue
    Write-Information "   bb-sync 'message'   Same as bb-git" -InformationAction Continue
    Write-Information "" -InformationAction Continue
    Write-Information "üìö Examples:" -InformationAction Continue
    Write-Information "   bb-git 'feat: add new student management features'" -InformationAction Continue
    Write-Information "   bb-commit 'fix: resolve validation errors' -IncludeUntracked" -InformationAction Continue
    Write-Information "   bb-push -RemoteName upstream" -InformationAction Continue
    Write-Information "" -InformationAction Continue
    Write-Information "‚ÑπÔ∏è All operations automatically update fetchability index for Grok-4" -InformationAction Continue
}

# Show welcome message
Write-Information "‚úÖ BusBuddy Profile Loaded!" -InformationAction Continue
Write-Information "   Type 'bb-help' for Git workflow commands" -InformationAction Continue
Write-Information "   Type 'bb-status' for repository status" -InformationAction Continue
'@

    try {
        $profileContent | Out-File -FilePath $profilePath -Encoding UTF8 -Force
        Write-Information "‚úÖ BusBuddy profile updated at: $profilePath" -InformationAction Continue
        Write-Information "   Run '. `$PROFILE' or restart PowerShell to load changes" -InformationAction Continue
    } catch {
        Write-Error "‚ùå Failed to update profile: $($_.Exception.Message)"
    }
}

# Summary
Write-Information "" -InformationAction Continue
Write-Information "üéâ BusBuddy Git Workflow Setup Complete!" -InformationAction Continue
Write-Information "=========================================" -InformationAction Continue
Write-Information "" -InformationAction Continue
Write-Information "‚úÖ Functions available in current session:" -InformationAction Continue
Write-Information "   bb-git 'message'    -> Complete commit and push workflow" -InformationAction Continue
Write-Information "   bb-commit 'message' -> Commit with fetchability update" -InformationAction Continue
Write-Information "   bb-push             -> Push with validation" -InformationAction Continue
Write-Information "   bb-fetch-update     -> Update fetchability index" -InformationAction Continue
Write-Information "" -InformationAction Continue
Write-Information "üìù Next steps:" -InformationAction Continue
Write-Information "   1. Run with -UpdateProfile to add to BusBuddy profile" -InformationAction Continue
Write-Information "   2. Test with: bb-git 'test: verify Git workflow integration'" -InformationAction Continue
Write-Information "   3. Use bb-status to check repository and fetchability status" -InformationAction Continue
Write-Information "" -InformationAction Continue
Write-Information "üéØ Goal achieved: Fetchability index automatically updated for Grok-4!" -InformationAction Continue
