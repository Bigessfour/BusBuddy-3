name: "üöå BusBuddy - Simplified CI with Reusable Workflow"

# This workflow demonstrates the fallback approach using secrets: inherit
# for VS Code GitHub Actions extension compatibility

on:
  push:
    branches: [main, develop]
    paths:
      - 'BusBuddy.WPF/**'
      - 'BusBuddy.Core/**'
      - '**.csproj'
      - '**.sln'
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      configuration:
        description: 'Build configuration'
        required: true
        default: 'Debug'
        type: choice
        options:
          - Debug
          - Release

jobs:
  # Main build using reusable workflow with secrets: inherit
  build-debug:
    name: üèóÔ∏è Debug Build & Test
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.configuration == 'Debug' }}
    uses: ./.github/workflows/build-reusable.yml
    with:
      configuration: 'Debug'
      run-tests: true
      upload-artifacts: true
    secrets: inherit

  build-release:
    name: üöÄ Release Build & Test
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.configuration == 'Release' }}
    uses: ./.github/workflows/build-reusable.yml
    with:
      configuration: 'Release'
      run-tests: true
      upload-artifacts: true
    secrets: inherit

  # Manual dispatch build
  build-manual:
    name: üéØ Manual Build (${{ inputs.configuration }})
    if: ${{ github.event_name == 'workflow_dispatch' }}
    uses: ./.github/workflows/build-reusable.yml
    with:
      configuration: ${{ inputs.configuration }}
      run-tests: true
      upload-artifacts: true
    secrets: inherit

  # Summary job
  build-summary:
    name: üìä Build Summary
    runs-on: ubuntu-latest
    needs: [build-debug, build-release, build-manual]
    if: always()
    steps:
      - name: üìä Report Results
        run: |
          echo "## üöå BusBuddy Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Debug Build | ${{ needs.build-debug.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Release Build | ${{ needs.build-release.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Manual Build | ${{ needs.build-manual.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.build-debug.result }}" == "failure" || "${{ needs.build-release.result }}" == "failure" || "${{ needs.build-manual.result }}" == "failure" ]]; then
            echo "### ‚ùå Build Failed"
            echo "Check the individual job logs for detailed error information."
            exit 1
          else
            echo "### ‚úÖ All Builds Successful"
          fi
