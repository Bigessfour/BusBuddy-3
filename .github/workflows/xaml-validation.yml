# üöå BusBuddy XML/XAML Comprehensive Validation
# PowerShell XML/XAML Validation for GitHub Actions and VS Code

name: "üîç XML/XAML Quality Gate"
description: "Comprehensive validation of XML/XAML files using enhanced PowerShell validation system"

on:
  workflow_call:
    inputs:
      validation-path:
        description: 'Path to validate XML/XAML files'
        required: false
        default: './'
        type: string
      schema-validation:
        description: 'Enable schema validation where available'
        required: false
        default: true
        type: boolean
      fail-on-warnings:
        description: 'Fail build on XML warnings'
        required: false
        default: false
        type: boolean
      fix-issues:
        description: 'Attempt to fix common XML formatting issues'
        required: false
        default: false
        type: boolean

jobs:
  xml-validation:
    name: "üîç XML/XAML Comprehensive Validation"
    runs-on: windows-latest

    steps:
    - name: "üì• Checkout Repository"
      uses: actions/checkout@v4

    - name: "üîß Setup PowerShell Environment"
      shell: pwsh
      run: |
        Write-Host "üöå Setting up BusBuddy XML/XAML validation environment..." -ForegroundColor Green
        $PSVersionTable.PSVersion

    - name: "üîç Run Comprehensive XML/XAML Validation"
      shell: pwsh
      run: |
        Write-Host "üîç Running comprehensive XML/XAML validation..." -ForegroundColor Yellow

        # Set environment to prevent profile loading issues
        $env:NoBusBuddyProfile = "true"

        # Change to validation path
        $validationPath = "${{ inputs.validation-path }}"
        if ($validationPath -and $validationPath -ne "./") {
          Set-Location $validationPath
        }

        # Run the comprehensive XML validation
        $scriptPath = "PowerShell/Scripts/Maintenance/validate-xml-files.ps1"

        if (Test-Path $scriptPath) {
          Write-Host "‚úÖ Found XML validation script: $scriptPath" -ForegroundColor Green

          # Build validation parameters
          $validationParams = @(
            "-OutputFormat", "HTML"
            "-ExportPath", "XMLValidationReport.html"
          )

          if ("${{ inputs.schema-validation }}" -eq "true") {
            $validationParams += "-SchemaValidation"
          }

          if ("${{ inputs.fix-issues }}" -eq "true") {
            $validationParams += "-FixIssues"
          }

          # Run validation
          Write-Host "üîç Running validation with parameters: $($validationParams -join ' ')" -ForegroundColor Cyan
          $exitCode = & $scriptPath @validationParams

          # Check results
          if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ XML/XAML validation completed successfully!" -ForegroundColor Green
          } else {
            Write-Host "‚ùå XML/XAML validation found issues!" -ForegroundColor Red

            # Read the generated report for summary
            if (Test-Path "XMLValidationReport.html") {
              Write-Host "üìÑ Validation report generated: XMLValidationReport.html" -ForegroundColor Cyan
            }

            if ("${{ inputs.fail-on-warnings }}" -eq "true") {
              Write-Host "‚ö†Ô∏è Failing build due to XML/XAML issues (fail-on-warnings enabled)" -ForegroundColor Yellow
              exit 1
            } else {
              Write-Host "‚ö†Ô∏è XML/XAML issues found but not failing build" -ForegroundColor Yellow
            }
          }
        } else {
          Write-Host "‚ö†Ô∏è XML validation script not found at: $scriptPath" -ForegroundColor Yellow
          Write-Host "Skipping XML/XAML validation..." -ForegroundColor Yellow
        }

    - name: "üìã Upload XML/XAML Validation Report"
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: xml-xaml-validation-report
        path: |
          XMLValidationReport*.html
          xml-validation-*.json
        retention-days: 30
